!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?s(exports):"function"==typeof define&&define.amd?define(["exports"],s):s(t.Heegs={})}(this,function(t){"use strict";const s=(t,s,i)=>{return{setMass:s=>{i[5*t+4]=s},setPosition:(i,e)=>{s[2*t]=i,s[2*t+1]=e},setVelocity:(s,e)=>{i[5*t]=s,i[5*t+1]=e}}},i={update(t,s,i,e,a,h,o){let r=h[o],c=h[o+1];const n=h[o+2],f=h[o+3],d=h[o+4],u=n/d,l=f/d,p=t*t;s=.5*u*p+r*t+s,i=.5*l*p+c*t+i,r=u*t+r,c=l*t+c,e[a]=s,e[a+1]=i,h[o]=r,h[o+1]=c}};class e{constructor(){this.x=0,this.y=0,this.c=e.c}setIntensity(t){this.c=t*e.c}setCenter(t,s){this.x=t,this.y=s}update(t,s,i,e,a){const h=this.x-s,o=this.y-i,r=Math.sqrt(h**2+o**2),c=this.c*h*r,n=this.c*o*r;e[a+2]+=c,e[a+3]+=n}}e.c=1e-7;class a{constructor(){this.x=0,this.c=a.c}setIntensity(t){this.c=t*a.c}setX(t){this.x=t}update(t,s,i,e,a){e[a+2]+=(this.x-s)*this.c}}a.c=1e-7;class h{constructor(){this.y=0,this.c=h.c}setIntensity(t){this.c=t*h.c}setY(t){this.y=t}update(t,s,i,e,a){e[a+3]+=(this.y-i)*this.c}}h.c=1e-7,t.Engine=class{constructor(t){this.numberOfParticles=t,this.behaviors=[],this.initializeEngine()}initializeEngine(){const t=new ArrayBuffer(2*this.numberOfParticles*4),s=new ArrayBuffer(5*this.numberOfParticles*4);this.positionData=new Float32Array(t),this.physicsData=new Float32Array(s);for(let t=0;t<this.numberOfParticles;t++)this.physicsData[5*t+4]=1}setParticlesParams(t){for(let i=0;i<this.numberOfParticles;i++)t(i,s(i,this.positionData,this.physicsData))}start(t){this.time=t}update(t){const s=t-this.time;this.time=t,this.updateParticles(s)}updateParticles(t){for(let s=0;s<this.numberOfParticles;s++){const e=2*s,a=5*s,h=this.positionData[e],o=this.positionData[e+1];this.behaviors.forEach(s=>{s.update(t,h,o,this.physicsData,a)}),i.update(t,h,o,this.positionData,e,this.physicsData,a),this.physicsData[a+2]=0,this.physicsData[a+3]=0}}addBehavior(t){const s=new t;return this.behaviors=this.behaviors.concat(s),s}removeBehavior(t){const s=this.behaviors.findIndex(s=>s===t);this.behaviors=this.behaviors.slice(0,s).concat(this.behaviors.slice(s+1))}},t.Drag=class{constructor(){this.fixedCoeff=1e-6,this.randomCoeff=1e-6}setIntensity(t,s){this.fixedCoeff=t,this.randomCoeff=s}update(t,s,i,e,a){const h=e[a],o=e[a+1],r=-(this.fixedCoeff+Math.random()*this.randomCoeff)*h,c=-(this.fixedCoeff+Math.random()*this.randomCoeff)*o;e[a+2]+=r,e[a+3]+=c}},t.Sink=e,t.VerticalGravity=a,t.HorizontalGravity=h,Object.defineProperty(t,"__esModule",{value:!0})});
